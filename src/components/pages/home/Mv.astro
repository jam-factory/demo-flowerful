---
import MvSlider from "./MvSlider.astro"
---

<section class="mv" id="mv">
  <div class="thumb">
    <MvSlider />
    <div class="content">
      <h1 id="slider-title">Flowerful</h1>
      <span>花で彩る、心豊かな毎日を。</span>
    </div>
  </div>

  <div class="scroll">
    <span class="scroll-text">Scroll</span>
    <span class="bar"></span>
  </div>
</section>

<style lang="scss">
.mv {
  padding: 8rem 6rem 6rem 6rem;
  height: 100svh;
  min-height: 68rem;
  width: 100%;

  @include mixin.tab {
    padding: 7.6rem 4rem 4rem 4rem;
  }

  @include mixin.sp {
    padding: 5.6rem 2rem 2rem 2rem;
    min-height: 56rem;
  }
}

.thumb {
  position: relative;
  width: 100%;
  height: 100%;

  &::before {
    width: calc(100% - 4rem);
    height: calc(100% - 4rem);

    border: 0.1rem solid var.$c-white;
    position: absolute;
    left: 2rem;
    top: 2rem;
    left: 0;
    right: 0;
    top: 0;
    bottom: 0;
    margin: auto;
    display: block;
    z-index: 10;
  }

  &::after {
    content: "";
    width: 100%;
    height: 100%;
    position: absolute;
    left: 0;
    top: 0;
    background-color: rgba(var.$c-black, 0.3);
  }

  img {
    height: 100%;
    object-fit: cover;
  }
}

.content {
  position: absolute;
  top: 50%;
  left: 50%;
  transform: translate(-50%, -50%);
  z-index: 10;
  display: flex;
  flex-direction: column;
  align-items: center;

  h1 {
    font-family: var.$font-cav;
    font-size: 12rem;
    color: var.$c-white;
    font-weight: 400;
    line-height: 1;

    @include mixin.sp {
      font-size: 8rem;
    }

    @include mixin.sp-s {
      font-size: 6.4rem;
    }
  }

  span {
    z-index: 10;
    color: var.$c-white;
    font-weight: bold;
    letter-spacing: 0.2em;
    text-shadow: 0 0 1rem rgba(0, 0, 0, 0.8);
    font-family: var.$font-zen;

    @include mixin.sp {
      font-size: 1.3rem;
    }

    @include mixin.sp-s {
      font-size: 1.1rem;
    }
  }
}

.scroll {
  display: flex;
  align-items: center;
  flex-direction: column;
  position: absolute;
  right: 8rem;
  bottom: 10rem;
  z-index: 1;

  @include mixin.tab {
    right: 6rem;
    bottom: 8rem;
  }

  @include mixin.sp {
    right: 4rem;
    bottom: 6rem;
  }

  @include mixin.sp-s {
    right: 3rem;
    bottom: 5rem;
  }

  .scroll-text {
    display: block;
    writing-mode: vertical-rl;
    font-weight: bold;
    letter-spacing: 0.1em;
    color: var.$c-white;
    font-family: var.$font-zen;
    font-weight: 500;
    font-size: 1.4rem;

    @include mixin.sp {
      font-size: 1.2rem;
    }
  }

  span.bar {
    position: relative;
    width: 0.1rem;
    height: 6rem;
    display: block;
    margin-top: 1.6rem;
    overflow: hidden;
    transform: translateX(-0.2rem);

    @include mixin.sp {
      height: 4.8rem;
      margin-top: 0.8rem;
    }

    &::before {
      content: "";
      position: absolute;
      top: 0;
      left: 0;
      width: 100%;
      height: 100%;
      background-color: var.$c-white;
      animation: scroll-indicator 2s infinite;
    }
  }
}

@keyframes scroll-indicator {
  0% {
    transform: translateY(-100%);
  }

  80% {
    transform: translateY(100%);
  }

  100% {
    transform: translateY(100%);
  }
}
</style>

<script>
  const mv: HTMLElement | null = document.getElementById('mv');
  const header: HTMLElement | null = document.querySelector('.js-header');

  // add a bg class to the header while it's in mv section, using intersection observer
  if(mv && header) {
    const observer = new IntersectionObserver((entries) => {
      entries.forEach((entry) => {
        if (entry.isIntersecting) {
          header.classList.add('is-transparent');
        } else {
          header.classList.remove('is-transparent');
        }
      });
    });

    observer.observe(mv);
  }
</script>