---
// fonts
import '@fontsource/shippori-mincho/400.css';
import '@fontsource/shippori-mincho/600.css';
import '@fontsource/shippori-mincho/700.css';
import '@fontsource/klee-one/400.css';
import '@fontsource/klee-one/600.css';
import '@fontsource-variable/caveat';
import '@fontsource/zen-kaku-gothic-new/400.css';
import '@fontsource/zen-kaku-gothic-new/500.css';
import '@fontsource/zen-kaku-gothic-new/700.css';

// css
import 'the-new-css-reset';
import '@/styles/global.scss';

// components
import Header from '@/components/header/Header.astro';
import Footer from '@/components/footer/Footer.astro';
import HamburgerMenu from '@/components/hamburger-menu/HamburgerMenu.astro';

const {title} = Astro.props;

const titleText = title ? `${title} | デモサイト - Flowerful` : 'デモサイト - Flowerful';
---

<!doctype html>
<html lang="ja">
	<head>
		<meta charset="UTF-8" />
		<meta name="viewport" content="width=device-width" />
		<link rel="icon" href="/favicon.ico" />
		<meta name="generator" content={Astro.generator} />
		<title>{titleText}</title>
		<meta name="robots" content="noindex, nofollow">
		<meta property="og:image" content="https://demo-02.jam-factory.tech/ogp.png">
		<meta property="og:image:width" content="1200">
		<meta property="og:image:height" content="630">
		<meta property="og:type" content="website">
		<meta name="twitter:card" content="summary">
		<meta name="twitter:title" content=`${titleText}`>
		<meta name="twitter:image" content="https://demo-02.jam-factory.tech/ogp.png">
		<meta name="twitter:image:width" content="1200">
		<meta name="twitter:image:height" content="630">
	</head>
	<body>
		<div class="wrap">
			<Header />
			<HamburgerMenu />
			<main>
				<slot />
			</main>
			<Footer />
		</div>
	</body>
</html>

<style>
	.wrap {
		display: flex;
		flex-direction: column;
		min-height: 100vh;
	}

	main {
		flex-grow: 1;
		display: flex;
		flex-direction: column;
	}
</style>

<script>
	const hamburgerBtn = document.querySelector('.js-hamburger-btn');
	const hamburgerMenu = document.querySelector('.js-hamburger-menu');
	const hamburgerMenuLinks = document.querySelectorAll('.js-hamburger-menu a');

	if(hamburgerMenu && hamburgerBtn) {
		hamburgerBtn.addEventListener('click', () => {
			hamburgerMenu.classList.toggle('is-open');
		});
		
		hamburgerMenuLinks.forEach(link => {
			link.addEventListener('click', () => {
				hamburgerMenu.classList.remove('is-open');
			});
		});
	}
</script>